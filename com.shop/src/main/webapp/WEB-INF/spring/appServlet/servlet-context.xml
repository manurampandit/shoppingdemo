<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="itemDao" class="com.control.dao.impl.ItemDaoImpl" />  
	<beans:bean id="itemService" class="com.control.service.impl.ItemServiceImpl" />  
	<beans:bean id="userDao" class="com.control.dao.impl.UserDaoImpl" />
	<beans:bean id="ordersDao" class="com.control.dao.impl.OrdersDaoImpl" />
	<beans:bean id="addressDao" class="com.control.dao.impl.AddressDaoImpl" />
	<beans:bean id="userService" class="com.control.service.impl.UserServiceImpl" />
	<beans:bean id="orderService" class="com.control.service.impl.OrdersServiceImpl" />

	<!-- <beans:bean name="dataSource" id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://localhost:3306/userdb" />  
  		<beans:property name="username" value="root" />  
  		<beans:property name="password" value="root" /> --> 

	<beans:bean name="dataSource" id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<beans:property name="url" value="jdbc:oracle:thin:@localhost:1521:orcl" />
		<beans:property name="username" value="myshop_new" />
		<beans:property name="password" value="myshop_new" />
	</beans:bean>

	<!-- <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation" value="WEB-INF/sqlmap-config.xml" />
	</beans:bean> -->
	
	<beans:bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.control.model.Address</beans:value>
				<beans:value>com.control.model.Items</beans:value>
				<beans:value>com.control.model.Orders</beans:value>
				<beans:value>com.control.model.Users</beans:value>
				<beans:value>com.control.model.OrderDetails</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">create</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>
	
	<beans:bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="hibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>
	</beans:bean>

	<context:component-scan base-package="com.control" />
</beans:beans>

